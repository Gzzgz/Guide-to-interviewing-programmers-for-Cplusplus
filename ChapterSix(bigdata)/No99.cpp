/*
【名称】40亿个非负整数中找到出现两次的数和素有数的中位数
【题目】32位无符号整数的范围是0-4294967295,现在有40亿个无符号整数，可以
使用最多1GB的内存，找出所有出现了两次的数。
【补充题目】可以使用最多10MB的内存，怎么找到这40亿个整数的中位数
【难度】尉
*/

/*
原问题：用bitmap表示数出现的情况，申请一个长度为4294967295 * 2的bit的数组
bitArr,用2个位置表示一个数出现的词频，正好占用1GB内存，遍历40亿个数，初次
遇到num，就bitArr[num * 2 + 1]和bitArr[num * 2]设置为01，第二次遇到就
bitArr[num * 2 + 1]和bitArr[num * 2]设置为10，之后再遇到就bitArr[num * 2 + 1]
和bitArr[num * 2]设置为11.遍历完成后，再依次遍历bitArr，如果发现bitArr[num * 2 + 1]
和bitArr[num * 2]设置为10，那么num就是出现了两次的数。

补充问题：分区间处理+累加每个区间的出现次数，找到第20亿个数落在哪个区间+
只关心在该区间的数，在该区间找到该数。
*/